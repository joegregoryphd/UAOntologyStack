@dc:creator "SIE Disruption Lab"
@dc:contributor "Joe Gregory"
@dc:description "A vocabulary to capture the organization patterns required by the SIE Disruption Lab."
@dc:hasVersion "0.1"
vocabulary <http://siedepartment.com/SIE_Core/SIE_Agent#> as SIE_Agent {
	
	////////////////////////////////////////////////////////////////////////////////////
	
	/////// Vocabulary Imports ///////
	
	
	// Import standard vocabularies	
	
    extends <http://purl.org/dc/elements/1.1/> as dc
    extends <http://www.w3.org/2000/01/rdf-schema#> as rdfs
    //extends <http://www.w3.org/2001/XMLSchema#> as xsd
    
    // Import relevant vocabularies
    
    extends <http://siedepartment.com/SIE_Foundation/SIE_Foundation#> as foundation
	
	extends <http://siedepartment.com/SIE_Core/SIE_Information#> as info
	//extends <http://siedepartment.com/SIE_Core/SIE_Event#> as event
	
	
	///////////////////////////////////////////////////////////////////////////////////
	
	/////// Vocabulary Definitions ///////
	
	///// Aspects
	
	@rdfs:label "Producer"
	@dc:description "A [=Producer=] is a ..."
	aspect Producer
	
	@rdfs:label "Consumer"
	@dc:description "A [=Consumer=] is a ..."
	aspect Consumer
	
	@rdfs:label "Agent"
	@dc:description "An [=Agent=]..."
	aspect Agent 


	
	///// Concepts
	
	@rdfs:label "Organization"
	@dc:description "A [=Organization=]..."
	concept Organization :> Agent, foundation:MaterialEntity, foundation:Container, foundation:ContainedElement [
		restricts all relation foundation:contains to Organization
		restricts all relation foundation:isContainedIn to Organization
	]
	
	@rdfs:label "Person"
	@dc:description "A [=Person=]..."
	concept Person :> Agent, foundation:MaterialEntity
	
	@rdfs:label "ProcessOwner"
	@dc:description "A [=ProcessOwner=] is a ..."
	concept ProcessOwner :> foundation:Role
	
	@rdfs:label "Managed Process"
	@dc:description "A [=ManagedProcess=]..."
	concept ManagedProcess :> foundation:Process
	
	@rdfs:label "Procedure"
	@dc:description "A [=Procedure=]..."
	concept Procedure :> info:PrescriptiveInformationEntity [
		restricts all relation info:prescribes to foundation:Process
		restricts some relation info:prescribes to foundation:Process
	]
	
	@rdfs:label "Plan"
	@dc:description "A [=Plan=]..."
	concept Plan :> info:PrescriptiveInformationEntity [
		restricts all relation info:prescribes to foundation:Process
		restricts some relation info:prescribes to foundation:Process
		restricts some relation foundation:contains to Procedure
	]
	
	
	
	///// Relations
	
	@rdfs:label "Belongs To"
	@dc:description "[=BelongsTo=] is a..."
	relation entity BelongsTo [
		from Person
		to Organization
		@rdfs:label "belongs to"
		forward belongsTo
		@rdfs:label "has belonging"
		reverse hasBelonging
		asymmetric
		irreflexive
	]
	
	@rdfs:label "Responsible For"
	@dc:description "[=ResponsibleFor=] is a..."
	relation entity ResponsibleFor [
		from ProcessOwner
		to ManagedProcess
		@rdfs:label "responsible for"
		forward responsibleFor
		@rdfs:label "is responsibility of"
		reverse isResponsibilityOf
		asymmetric
		irreflexive
	]
	
	@rdfs:label "Has Input"
	@dc:description "[=HasInput=] is a..."
	relation entity HasInput [
		from Consumer
		to foundation:Continuant
		@rdfs:label "has input"
		forward hasInput
		@rdfs:label "is input of"
		reverse isInputOf
		asymmetric
		irreflexive
	]
	
	@rdfs:label "Has Output"
	@dc:description "[=HasOutput=] is a..."
	relation entity HasOutput [
		from Producer
		to foundation:Continuant
		@rdfs:label "has output"
		forward hasOutput
		@rdfs:label "is output of"
		reverse isOutputOf
		asymmetric
		irreflexive
	]
	
	@rdfs:label "Is Role Of"
	@dc:description "[=IsRoleOf=] is a..."
	relation entity IsRoleOf :> foundation:GenericallyDependentOn [
		from foundation:Role
		to Agent
		@rdfs:label "is role of"
		forward isRoleOf
		@rdfs:label "has role"
		reverse hasRole
		asymmetric
		irreflexive
	]
	
	@rdfs:label "Has Organizational Context"
	@dc:description "[=HasOrganizationContext=] is a "
	relation entity HasOrganziationalContext [
		from foundation:Role
		to Organization
		@rdfs:label "has organizational context"
		forward hasOrganziationalContext
		@rdfs:label "is organizational context of"
		reverse isOrganizationalContextOf
		asymmetric
		irreflexive
	]
	
	@rdfs:label "Has Planned Temporal Region"
	@dc:description "[=HasPlannedTemporalRegion=] is a "
	relation entity HasPlannedTemporalRegion [
		from Plan
		to foundation:TemporalRegion
		@rdfs:label "has planned temporal region"
		forward hasPlannedTemporalRegion
		@rdfs:label "is planned temporal region of"
		reverse isPlannedTemporalRegionOf
		asymmetric
		irreflexive
	]
	
		
	
	///// Scalar Properties
	
	
	
	///// Redefined Concepts
		
	ref concept foundation:Process :> Producer, Consumer
	
	
	
	
	///// Rules
			
	
}